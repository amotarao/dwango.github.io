<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VRM on dwango on GitHub</title>
    <link>https://dwango.github.io/vrm/</link>
    <description>Recent content in VRM on dwango on GitHub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>DWANGO Co., Ltd.</copyright>
    <lastBuildDate>Mon, 16 Apr 2018 16:30:00 +0900</lastBuildDate>
    
	<atom:link href="https://dwango.github.io/vrm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BlendShapeを操作する</title>
      <link>https://dwango.github.io/vrm/univrm/api/univrm_use_blendshape/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/api/univrm_use_blendshape/</guid>
      <description>var proxy=GetComponent&amp;lt;VRMBlendShapeProxy&amp;gt;(); // enumで呼び出し proxy.SetValue(BlendShapePreset.A, 1.0f); // 0から1で指定 // stringで呼び出し proxy.SetValue(&amp;#34;A&amp;#34;, 1.0f);</description>
    </item>
    
    <item>
      <title>GLTFについて</title>
      <link>https://dwango.github.io/vrm/gltf_about/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/gltf_about/</guid>
      <description>glTFはOpenGLの仕様策定をしているKHRONOSによる3Dフォーマットです。2017年にVersion2が策定されました。 VRMはg</description>
    </item>
    
    <item>
      <title>MToon</title>
      <link>https://dwango.github.io/vrm/univrm/shaders/mtoon/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/shaders/mtoon/</guid>
      <description>Shader preloadingの設定 MToon について MToon は日本のアニメ的表現をすることを目標としています。 主色 (Lit Color) と陰色 (Shade Color) の 2 色を、Lighting パラメ</description>
    </item>
    
    <item>
      <title>UniVRMで使えるシェーダー</title>
      <link>https://dwango.github.io/vrm/univrm/shaders/univrm_shaders/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/shaders/univrm_shaders/</guid>
      <description>Shader preloadingの設定 PBR Standardシェーダー Unity標準です。 Unlit系シェーダー VRM/UnlitTexture UnityのUnit/Textureと同</description>
    </item>
    
    <item>
      <title>UniVRMのインストール</title>
      <link>https://dwango.github.io/vrm/univrm/univrm_install/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/univrm_install/</guid>
      <description>Unity Version Unity5.6以降をサポートしています。 インストール Assets/VRMにインストールします。 既存のVRMが存在している場合、あらかじ</description>
    </item>
    
    <item>
      <title>UniVRMの座標系変換について</title>
      <link>https://dwango.github.io/vrm/univrm/api/univrm_coordinate/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/api/univrm_coordinate/</guid>
      <description>UniVRMは、インポート・エクスポート時に自動でGLTFとの座標返還を実行しています。 VRMの座標系 VRMはGLTFの拡張なので、GLTF</description>
    </item>
    
    <item>
      <title>UniVRMモデルのワークフロー</title>
      <link>https://dwango.github.io/vrm/univrm/univrm_workflow/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/univrm_workflow/</guid>
      <description>ワークフロー humanoid avatarがセット済みの人間型モデルを用意します Fbx等のUnityのHumanoidモデルを用意してください。 FbxのIm</description>
    </item>
    
    <item>
      <title>VRMSpringBone</title>
      <link>https://dwango.github.io/vrm/univrm/components/univrm_secondary/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/components/univrm_secondary/</guid>
      <description>Root/secondary:VRMSpringBone 尻尾、髪の毛、衣装などで動きに合わせて揺れて欲しいものの設定です。 揺らしたいオブジェクトの一番親のGameObjectをRootBones</description>
    </item>
    
    <item>
      <title>VRMのT-Poseについて</title>
      <link>https://dwango.github.io/vrm/vrm_tpose/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/vrm_tpose/</guid>
      <description>VRMの第１実装のUnityのHumanoidに準拠したT-Pose1を採用しています。 T-Poseの例 胴体と頭・足については自明ですが、腕</description>
    </item>
    
    <item>
      <title>VRMファイルが使えるアプリケーションは？</title>
      <link>https://dwango.github.io/vrm/vrm_applications/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/vrm_applications/</guid>
      <description>VRMファイル対応アプリケーション ニコニ立体 3Dモデルデータ投稿サービス。VRMファイル投稿可能 バーチャルキャスト VR空間のスタジオをリアル</description>
    </item>
    
    <item>
      <title>VRMファイルを作ってみたい</title>
      <link>https://dwango.github.io/vrm/how_to_make_vrm/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/how_to_make_vrm/</guid>
      <description>VRMファイルのつくりかた（既存3Dモデルからのコンバート） VRMファイルをつくるためには、UnityとUniVRMを使用します。 おおまかな</description>
    </item>
    
    <item>
      <title>VRMファイルを眺めてみたい</title>
      <link>https://dwango.github.io/vrm/how_to_view_vrm/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/how_to_view_vrm/</guid>
      <description>VRMファイルの読み込みかた 申し訳ありません、簡単なVRMファイルのビューアーアプリケーションは2018年4月16日現在まだありません！ 少し</description>
    </item>
    
    <item>
      <title>VRMモデルを実行時にインポートする</title>
      <link>https://dwango.github.io/vrm/univrm/api/univrm_import_runtime/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/api/univrm_import_runtime/</guid>
      <description>Unityで実行時にモデルをインポートする方法です。 ファイルパスからVRMを開く var path=&amp;#34;sample.vrm&amp;#34;; var go=VRM.VRMImporter.LoadFromPath(path); Debug.LogFormat(&amp;#34;loaded {0}&amp;#34;, go.name); ファイルパスから非同期にVRMを開く var path=&amp;#34;sample.vrm&amp;#34;; VRMImporter.LoadVrmAsync(path, go =&amp;gt;</description>
    </item>
    
    <item>
      <title>VRM仕様</title>
      <link>https://dwango.github.io/vrm/vrm_spec/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/vrm_spec/</guid>
      <description>glTF-2.0のバイナリ形式glbをベースにした、VR向けモデルフォーマットです。 拡張子 .vrmを使います。gltfのバイナリ形式.glb</description>
    </item>
    
    <item>
      <title>gltf VRM extension</title>
      <link>https://dwango.github.io/vrm/vrm_extension/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/vrm_extension/</guid>
      <description>Contributors  dwango  Status Draft
Dependencies Written against the glTF 2.0 spec.
Overview This extension defines Humanoid model for VR.
 human bone definitions standard morphs secondary animation annotations mesh visibilities for first person view  glTF Schema Updates This extension adds:
JSON Schema TODO: Links to the JSON schema for the new extension properties.
Known Implementations  TODO: List of known implementations, with links to each if available.</description>
    </item>
    
    <item>
      <title>「VRM」って何？どんなことができる？</title>
      <link>https://dwango.github.io/vrm/vrm_about/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/vrm_about/</guid>
      <description>「VRM」とは VR(Virtual Reality)やVTuberなどにおいて「キャラクターや人型のアバター（の3Dモデル）」を取り扱おうとした場合、従来はアプ</description>
    </item>
    
    <item>
      <title>ブレンドシェイプの設定</title>
      <link>https://dwango.github.io/vrm/univrm/components/univrm_blendshape/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/components/univrm_blendshape/</guid>
      <description>VRMBlendShapeProxy 実行時のVRMBlendShapeProxyのインスペクタ。Editorをプレイ状態にすると表示されます 使い方は、 BlendShapeAv</description>
    </item>
    
    <item>
      <title>モデル情報</title>
      <link>https://dwango.github.io/vrm/univrm/components/univrm_meta/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/components/univrm_meta/</guid>
      <description>VRMMeta VRMMetaコンポーネント 情報(Information) タイトル(Title) アバターモデルの名前を設定します 作者(Author) モデル</description>
    </item>
    
    <item>
      <title>一人称表示</title>
      <link>https://dwango.github.io/vrm/univrm/components/univrm_firstperson/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/components/univrm_firstperson/</guid>
      <description>VRMFirstPerson 一人称表示に関連する設定です。 立体ちゃんは頭とそれ以外が分かれているので体をBoth、頭をThirdPersonOnlyに設定します。 FirstPersonBone 通</description>
    </item>
    
    <item>
      <title>視線制御</title>
      <link>https://dwango.github.io/vrm/univrm/components/univrm_lookat/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://dwango.github.io/vrm/univrm/components/univrm_lookat/</guid>
      <description>VRMLookAtHead VRMLookAtHead このコンポーネントは頭から見たTargetの方向を計算します。 Target 注視する対象物です。目を向けたい場所にあるオブジェクトをセットしてくださ</description>
    </item>
    
  </channel>
</rss>